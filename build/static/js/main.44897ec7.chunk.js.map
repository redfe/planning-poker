{"version":3,"sources":["index.js"],"names":["points","Card","point","this","props","className","isSelected","onClick","handleClick","React","Component","Selection","cards","map","mySelectedPoint","key","handleSelectionCardClick","User","name","Table","estimaters","length","now","Date","toLocaleDateString","toLocaleTimeString","sort","e1","e2","reduce","acc","cur","isOpend","estimater","Estimater","OpenButton","handleOpenButtonClick","CopyButton","text","createCopyText","undefined","PlanningPoker","eventSubscribers","select","event","state","slice","find","e","setState","unselect","filter","open","return","myName","window","prompt","roomId","socket","getSetupedRoomId","io","isOend","bind","search","location","substring","uuid","uuidv4","hash","history","replaceState","on","subscriber","type","eventType","emit","myEstimater","isOff","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44897ec7.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./index.css\";\n\nconst points = [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"13\", \"21\", \"34\", \"55\", \"?\", \"âˆž\"];\n\nclass Card extends React.Component {\n  render() {\n    const point = this.props.point;\n    const className = \"card\" + (this.props.isSelected ? \" selected\" : \"\");\n    return (\n      <div className={className} onClick={this.props.handleClick}>\n        {point}\n      </div>\n    );\n  }\n}\n\nclass Selection extends React.Component {\n  render() {\n    const cards = points.map((point) => {\n      const isSelected = this.props.mySelectedPoint === point;\n      return (\n        <Card\n          isSelected={isSelected}\n          key={point}\n          point={point}\n          handleClick={() => this.props.handleSelectionCardClick(point)}\n        />\n      );\n    });\n    return <div className=\"selection\">{cards}</div>;\n  }\n}\nclass User extends React.Component {\n  render() {\n    return <div className=\"user\">{this.props.name}</div>;\n  }\n}\n\nclass Table extends React.Component {\n  createCopyText() {\n    const estimaters = this.props.estimaters;\n    if (estimaters.length === 0) {\n      return \"empty.\";\n    }\n    const now = new Date();\n    return (\n      \"[\" +\n      now.toLocaleDateString() +\n      \" \" +\n      now.toLocaleTimeString() +\n      \"] \" +\n      estimaters.sort((e1, e2) => e1.name > e2.name ? 1 : -1).reduce(\n        (acc, cur) => (acc ? acc + \", \" : \"\") + cur.name + \":\" + cur.point,\n        null\n      )\n    );\n  }\n  render() {\n    const isOpend = this.props.isOpend;\n    const estimaters = this.props.estimaters.map((estimater) => {\n      return (\n        <Estimater\n          key={estimater.name}\n          name={estimater.name}\n          point={estimater.point}\n          isOpend={isOpend}\n        />\n      );\n    });\n    return (\n      <div className=\"table\">\n        <div className=\"estimaters\">{estimaters}</div>\n        <OpenButton\n          isOpend={isOpend}\n          handleClick={() => this.props.handleOpenButtonClick()}\n        />\n        {isOpend && estimaters.length > 0 ? (\n          <CopyButton text={this.createCopyText()} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nclass CopyButton extends React.Component {\n  render() {\n    return (\n      <CopyToClipboard text={this.props.text}>\n        <div className=\"copy-button\">Copy</div>\n      </CopyToClipboard>\n    );\n  }\n}\n\nclass Estimater extends React.Component {\n  render() {\n    const point = this.props.isOpend ? this.props.point : undefined;\n    const className = \"estimater \" + (this.props.isOpend ? \"opend\" : \"closed\");\n    return (\n      <div className={className}>\n        <Card point={point} />\n        <div className=\"estimater-name\">{this.props.name}</div>\n      </div>\n    );\n  }\n}\n\nclass OpenButton extends React.Component {\n  render() {\n    const className = \"open-button\";\n    return (\n      <div className={className} onClick={() => this.props.handleClick()}>\n        {this.props.isOpend ? \"return\" : \"open\"}\n      </div>\n    );\n  }\n}\n\nclass PlanningPoker extends React.Component {\n  constructor(props) {\n    super(props);\n    let myName = undefined;\n    while (!myName) {\n      myName = window.prompt(\"your name\");\n    }\n    const socket = setupWebsocket(this.getSetupedRoomId());\n    this.state = {\n      myName: myName,\n      estimaters: [],\n      isOend: false,\n      socket: socket,\n    };\n    this.handleSelectionCardClick = this.handleSelectionCardClick.bind(this);\n    this.handleOpenButtonClick = this.handleOpenButtonClick.bind(this);\n  }\n\n  getSetupedRoomId() {\n    const search = window.location.search;\n    let roomId;\n    if (!search) {\n      const uuid = uuidv4();\n      window.location.hash = uuid;\n      window.history.replaceState(\"\", \"\", \"?\" + uuid);\n      roomId = uuid;\n    } else {\n      roomId = search.substring(1);\n    }\n    return roomId;\n  }\n  componentDidMount() {\n    this.state.socket.on(\"do event\", (event) => {\n      const subscriber = this.eventSubscribers[event.type];\n      if (subscriber) {\n        subscriber(event);\n      }\n    });\n  }\n\n  eventSubscribers = {\n    select: (event) => {\n      let estimaters = this.state.estimaters.slice();\n      let estimater = estimaters.find((e) => e.name === event.name);\n      if (!estimater) {\n        estimater = { name: event.name };\n        estimaters[estimaters.length] = estimater;\n      }\n      estimater[\"point\"] = event.point;\n      this.setState({ estimaters: estimaters });\n    },\n    unselect: (event) => {\n      const estimaters = this.state.estimaters.filter(\n        (e) => e.name !== event.name\n      );\n      this.setState({ estimaters: estimaters });\n    },\n    open: (event) => {\n      this.setState({\n        isOpend: true,\n      });\n    },\n    return: (event) => {\n      this.setState({\n        estimaters: [],\n        isOpend: false,\n      });\n    },\n  };\n\n  handleOpenButtonClick() {\n    const isOpend =\n      this.state.estimaters.length === 0 ? false : !this.state.isOpend;\n    const eventType = isOpend ? \"open\" : \"return\";\n    this.state.socket.emit(\"do event\", { type: eventType });\n  }\n\n  handleSelectionCardClick(point) {\n    const myEstimater = this.state.estimaters.find(\n      (e) => e.name === this.state.myName\n    );\n    const isOff = myEstimater && myEstimater.point === point;\n    let estimaters = this.state.estimaters.slice();\n    if (isOff) {\n      estimaters = this.state.estimaters.filter(\n        (e) => e.name !== this.state.myName\n      );\n    } else {\n      let myEstimater = estimaters.find((e) => e.name === this.state.myName);\n      if (!myEstimater) {\n        myEstimater = { name: this.state.myName };\n        estimaters[estimaters.length] = myEstimater;\n      }\n      myEstimater[\"point\"] = point;\n    }\n    const eventType = isOff ? \"unselect\" : \"select\";\n    this.state.socket.emit(\"do event\", {\n      type: eventType,\n      name: this.state.myName,\n      point: point,\n    });\n  }\n\n  render() {\n    const myEstimater = this.state.estimaters.find(\n      (e) => e.name === this.state.myName\n    );\n    return (\n      <div>\n        <Table\n          estimaters={this.state.estimaters}\n          isOpend={this.state.isOpend}\n          handleOpenButtonClick={this.handleOpenButtonClick}\n        />\n        <User name={this.state.myName} />\n        <Selection\n          mySelectedPoint={myEstimater ? myEstimater.point : undefined}\n          handleSelectionCardClick={this.handleSelectionCardClick}\n        />\n      </div>\n    );\n  }\n}\n\nfunction setupWebsocket(roomId) {\n  return window.io(\n    \"https://simple-websocket-server.herokuapp.com/?roomId=\" + roomId\n  );\n}\n\nReactDOM.render(<PlanningPoker />, document.getElementById(\"root\"));\n"],"sourceRoot":""}