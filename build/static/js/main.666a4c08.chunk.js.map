{"version":3,"sources":["index.js"],"names":["points","Card","point","this","props","className","isSelected","onClick","handleClick","React","Component","Selection","cards","map","mySelectedPoint","key","handleSelectionCardClick","User","name","Table","estimaters","estimater","Estimater","isOpend","OpenButton","handleOpenButtonClick","undefined","PlanningPoker","eventSubscribers","select","event","state","slice","find","e","length","setState","unselect","filter","open","return","myName","window","prompt","roomId","socket","location","hash","substring","io","isOend","bind","uuidv4","on","subscriber","type","eventType","emit","myEstimater","isOff","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.666a4c08.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./index.css\";\n\nconst points = [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"13\", \"21\", \"34\", \"55\", \"?\", \"âˆž\"];\n\nclass Card extends React.Component {\n  render() {\n    const point = this.props.point;\n    const className = \"card\" + (this.props.isSelected ? \" selected\" : \"\");\n    return (\n      <div className={className} onClick={this.props.handleClick}>\n        {point}\n      </div>\n    );\n  }\n}\n\nclass Selection extends React.Component {\n  render() {\n    const cards = points.map((point) => {\n      const isSelected = this.props.mySelectedPoint === point;\n      return (\n        <Card\n          isSelected={isSelected}\n          key={point}\n          point={point}\n          handleClick={() => this.props.handleSelectionCardClick(point)}\n        />\n      );\n    });\n    return <div className=\"selection\">{cards}</div>;\n  }\n}\nclass User extends React.Component {\n  render() {\n    return <div className=\"user\">{this.props.name}</div>;\n  }\n}\n\nclass Table extends React.Component {\n  render() {\n    const estimaters = this.props.estimaters.map((estimater) => {\n      return (\n        <Estimater\n          key={estimater.name}\n          name={estimater.name}\n          point={estimater.point}\n          isOpend={this.props.isOpend}\n        />\n      );\n    });\n    return (\n      <div className=\"table\">\n        <div className=\"estimaters\">{estimaters}</div>\n        <OpenButton\n          isOpend={this.props.isOpend}\n          handleClick={() => this.props.handleOpenButtonClick()}\n        />\n      </div>\n    );\n  }\n}\n\nclass Estimater extends React.Component {\n  render() {\n    const point = this.props.isOpend ? this.props.point : undefined;\n    const className = \"estimater \" + (this.props.isOpend ? \"opend\" : \"closed\");\n    return (\n      <div className={className}>\n        <Card point={point} />\n        <div className=\"estimater-name\">{this.props.name}</div>\n      </div>\n    );\n  }\n}\n\nclass OpenButton extends React.Component {\n  render() {\n    const className = \"open-button\";\n    return (\n      <div className={className} onClick={() => this.props.handleClick()}>\n        {this.props.isOpend ? \"return\" : \"open\"}\n      </div>\n    );\n  }\n}\n\nclass PlanningPoker extends React.Component {\n  constructor(props) {\n    super(props);\n    let myName = undefined;\n    while (!myName) {\n      myName = window.prompt(\"your name\");\n    }\n    const socket = setupWebsocket(window.location.hash.substring(1));\n    this.state = {\n      myName: myName,\n      estimaters: [],\n      isOend: false,\n      socket: socket,\n    };\n    this.handleSelectionCardClick = this.handleSelectionCardClick.bind(this);\n    this.handleOpenButtonClick = this.handleOpenButtonClick.bind(this);\n  }\n\n  componentDidMount() {\n    const hash = window.location.hash;\n    if (!hash) {\n      window.location.hash = uuidv4();\n    }\n    this.state.socket.on(\"do event\", (event) => {\n      const subscriber = this.eventSubscribers[event.type];\n      if (subscriber) {\n        subscriber(event);\n      }\n    });\n  }\n\n  eventSubscribers = {\n    select: (event) => {\n      let estimaters = this.state.estimaters.slice();\n      let estimater = estimaters.find((e) => e.name === event.name);\n      if (!estimater) {\n        estimater = { name: event.name };\n        estimaters[estimaters.length] = estimater;\n      }\n      estimater[\"point\"] = event.point;\n      this.setState({ estimaters: estimaters });\n    },\n    unselect: (event) => {\n      const estimaters = this.state.estimaters.filter(\n        (e) => e.name !== event.name\n      );\n      this.setState({ estimaters: estimaters });\n    },\n    open: (event) => {\n      this.setState({\n        isOpend: true,\n      });\n    },\n    return: (event) => {\n      this.setState({\n        estimaters: [],\n        isOpend: false,\n      });\n    },\n  };\n\n  handleOpenButtonClick() {\n    const isOpend =\n      this.state.estimaters.length === 0 ? false : !this.state.isOpend;\n    const eventType = isOpend ? \"open\" : \"return\";\n    this.state.socket.emit(\"do event\", { type: eventType });\n  }\n\n  handleSelectionCardClick(point) {\n    const myEstimater = this.state.estimaters.find(\n      (e) => e.name === this.state.myName\n    );\n    const isOff = myEstimater && myEstimater.point === point;\n    let estimaters = this.state.estimaters.slice();\n    if (isOff) {\n      estimaters = this.state.estimaters.filter(\n        (e) => e.name !== this.state.myName\n      );\n    } else {\n      let myEstimater = estimaters.find((e) => e.name === this.state.myName);\n      if (!myEstimater) {\n        myEstimater = { name: this.state.myName };\n        estimaters[estimaters.length] = myEstimater;\n      }\n      myEstimater[\"point\"] = point;\n    }\n    const eventType = isOff ? \"unselect\" : \"select\";\n    this.state.socket.emit(\"do event\", {\n      type: eventType,\n      name: this.state.myName,\n      point: point,\n    });\n  }\n\n  render() {\n    const myEstimater = this.state.estimaters.find(\n      (e) => e.name === this.state.myName\n    );\n    return (\n      <div>\n        <Table\n          estimaters={this.state.estimaters}\n          isOpend={this.state.isOpend}\n          handleOpenButtonClick={this.handleOpenButtonClick}\n        />\n        <User name={this.state.myName} />\n        <Selection\n          mySelectedPoint={myEstimater ? myEstimater.point : undefined}\n          handleSelectionCardClick={this.handleSelectionCardClick}\n        />\n      </div>\n    );\n  }\n}\n\nfunction setupWebsocket(roomId) {\n  return window.io(\n    \"https://simple-websocket-server.herokuapp.com/?roomId=\" + roomId\n  );\n}\n\nReactDOM.render(<PlanningPoker />, document.getElementById(\"root\"));\n"],"sourceRoot":""}