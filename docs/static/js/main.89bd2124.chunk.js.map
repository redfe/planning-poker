{"version":3,"sources":["components/Card.jsx","index.js"],"names":["Card","size","point","isSelectable","isSelected","isClosed","handleClick","props","className","join","onClick","defaultProps","points","Selection","cards","map","mySelectedPoint","handleSelectionCardClick","React","Component","User","this","name","Table","estimaters","length","now","Date","toLocaleDateString","toLocaleTimeString","sort","e1","e2","reduce","acc","cur","isOpend","estimater","handleOpenButtonClick","text","createCopyText","CopyButton","Estimater","undefined","OpenButton","PlanningPoker","eventSubscribers","select","event","state","slice","find","e","setState","unselect","filter","open","return","myName","window","prompt","roomId","socket","getSetupedRoomId","io","isOend","bind","search","location","substring","uuid","uuidv4","hash","history","replaceState","on","subscriber","type","eventType","emit","myEstimater","isOff","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89bd2124.chunk.js","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Card.css';\n\nexport const Card = ({ size, point, isSelectable, isSelected, isClosed, handleClick, ...props }) => {\n  return (\n    <div\n      className={[\n        \"card\",\n        (\"card-\" + size),\n        (isSelectable ? \"card-selectable\" : \"\"),\n        (isSelected ? \"card-selected\" : \"\"),\n        (isClosed ? \"card-closed\" : \"\")\n      ].join(\" \")}\n      onClick={handleClick}\n      {...props}\n    >\n      {isClosed ? \"\" : point}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  /**\n   * サイズ\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * ポイント数\n   */\n  point: PropTypes.number,\n  /**\n   * 選択可能かどうか?\n   */\n  isSelectable: PropTypes.bool,\n  /**\n   * 選択されているかどうか?\n   */\n  isSelected: PropTypes.bool,\n  /**\n   * 閉じてるかどうか?\n   */\n  isClosed: PropTypes.bool,\n  /**\n   * クリック時の動作\n   */\n  handleClick: PropTypes.func,\n};\n\nCard.defaultProps = {\n  size: \"medium\",\n  point: 0,\n  isSelectable: false,\n  isSelected: false,\n  isClosed: false,\n  handleClick: () => { },\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./index.css\";\nimport { Card } from \"./components/Card\"\n\nconst points = [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"13\", \"21\", \"34\", \"55\", \"?\", \"∞\"];\n\nclass Selection extends React.Component {\n  render() {\n    const cards = points.map((point) => {\n      const isSelected = this.props.mySelectedPoint === point;\n      return (\n        <Card\n          isSelectable={true}\n          isSelected={isSelected}\n          key={point}\n          point={point}\n          handleClick={() => this.props.handleSelectionCardClick(point)}\n        />\n      );\n    });\n    return <div className=\"selection\">{cards}</div>;\n  }\n}\nclass User extends React.Component {\n  render() {\n    return <div className=\"user\">{this.props.name}</div>;\n  }\n}\n\nclass Table extends React.Component {\n  createCopyText() {\n    const estimaters = this.props.estimaters;\n    if (estimaters.length === 0) {\n      return \"empty.\";\n    }\n    const now = new Date();\n    return (\n      \"[\" +\n      now.toLocaleDateString() +\n      \" \" +\n      now.toLocaleTimeString() +\n      \"] \" +\n      estimaters.sort((e1, e2) => e1.name > e2.name ? 1 : -1).reduce(\n        (acc, cur) => (acc ? acc + \" \" : \"\") + `${cur.name}(${cur.point})`,\n        null\n      )\n    );\n  }\n  render() {\n    const isOpend = this.props.isOpend;\n    const estimaters = this.props.estimaters.map((estimater) => {\n      return (\n        <Estimater\n          key={estimater.name}\n          name={estimater.name}\n          point={estimater.point}\n          isOpend={isOpend}\n        />\n      );\n    });\n    return (\n      <div className=\"table\">\n        <div className=\"estimaters\">{estimaters}</div>\n        <OpenButton\n          isOpend={isOpend}\n          handleClick={() => this.props.handleOpenButtonClick()}\n        />\n        {isOpend && estimaters.length > 0 ? (\n          <CopyButton text={this.createCopyText()} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nclass CopyButton extends React.Component {\n  render() {\n    return (\n      <CopyToClipboard text={this.props.text}>\n        <div className=\"copy-button\">Copy</div>\n      </CopyToClipboard>\n    );\n  }\n}\n\nclass Estimater extends React.Component {\n  render() {\n    const point = this.props.isOpend ? this.props.point : undefined;\n    const className = \"estimater \" + (this.props.isOpend ? \"opend\" : \"closed\");\n    return (\n      <div className={className}>\n        <Card isSelectable={false} isClosed={!this.props.isOpend} size=\"large\" point={point} />\n        <div className=\"estimater-name\">{this.props.name}</div>\n      </div>\n    );\n  }\n}\n\nclass OpenButton extends React.Component {\n  render() {\n    const className = \"open-button\";\n    return (\n      <div className={className} onClick={() => this.props.handleClick()}>\n        {this.props.isOpend ? \"return\" : \"open\"}\n      </div>\n    );\n  }\n}\n\nclass PlanningPoker extends React.Component {\n  constructor(props) {\n    super(props);\n    let myName = undefined;\n    while (!myName) {\n      myName = window.prompt(\"your name\");\n    }\n    const socket = setupWebsocket(this.getSetupedRoomId());\n    this.state = {\n      myName: myName,\n      estimaters: [],\n      isOend: false,\n      socket: socket,\n    };\n    this.handleSelectionCardClick = this.handleSelectionCardClick.bind(this);\n    this.handleOpenButtonClick = this.handleOpenButtonClick.bind(this);\n  }\n\n  getSetupedRoomId() {\n    const search = window.location.search;\n    let roomId;\n    if (!search) {\n      const uuid = uuidv4();\n      window.location.hash = uuid;\n      window.history.replaceState(\"\", \"\", \"?\" + uuid);\n      roomId = uuid;\n    } else {\n      roomId = search.substring(1);\n    }\n    return roomId;\n  }\n  componentDidMount() {\n    this.state.socket.on(\"do event\", (event) => {\n      const subscriber = this.eventSubscribers[event.type];\n      if (subscriber) {\n        subscriber(event);\n      }\n    });\n  }\n\n  eventSubscribers = {\n    select: (event) => {\n      let estimaters = this.state.estimaters.slice();\n      let estimater = estimaters.find((e) => e.name === event.name);\n      if (!estimater) {\n        estimater = { name: event.name };\n        estimaters[estimaters.length] = estimater;\n      }\n      estimater[\"point\"] = event.point;\n      this.setState({ estimaters: estimaters });\n    },\n    unselect: (event) => {\n      const estimaters = this.state.estimaters.filter(\n        (e) => e.name !== event.name\n      );\n      this.setState({ estimaters: estimaters });\n    },\n    open: (event) => {\n      this.setState({\n        isOpend: true,\n      });\n    },\n    return: (event) => {\n      this.setState({\n        estimaters: [],\n        isOpend: false,\n      });\n    },\n  };\n\n  handleOpenButtonClick() {\n    const isOpend =\n      this.state.estimaters.length === 0 ? false : !this.state.isOpend;\n    const eventType = isOpend ? \"open\" : \"return\";\n    this.state.socket.emit(\"do event\", { type: eventType });\n  }\n\n  handleSelectionCardClick(point) {\n    const myEstimater = this.state.estimaters.find(\n      (e) => e.name === this.state.myName\n    );\n    const isOff = myEstimater && myEstimater.point === point;\n    let estimaters = this.state.estimaters.slice();\n    if (isOff) {\n      estimaters = this.state.estimaters.filter(\n        (e) => e.name !== this.state.myName\n      );\n    } else {\n      let myEstimater = estimaters.find((e) => e.name === this.state.myName);\n      if (!myEstimater) {\n        myEstimater = { name: this.state.myName };\n        estimaters[estimaters.length] = myEstimater;\n      }\n      myEstimater[\"point\"] = point;\n    }\n    const eventType = isOff ? \"unselect\" : \"select\";\n    this.state.socket.emit(\"do event\", {\n      type: eventType,\n      name: this.state.myName,\n      point: point,\n    });\n  }\n\n  render() {\n    const myEstimater = this.state.estimaters.find(\n      (e) => e.name === this.state.myName\n    );\n    return (\n      <div>\n        <h1>Planning Poker</h1>\n        <Table\n          estimaters={this.state.estimaters}\n          isOpend={this.state.isOpend}\n          handleOpenButtonClick={this.handleOpenButtonClick}\n        />\n        <User name={this.state.myName} />\n        <Selection\n          mySelectedPoint={myEstimater ? myEstimater.point : undefined}\n          handleSelectionCardClick={this.handleSelectionCardClick}\n        />\n      </div>\n    );\n  }\n}\n\nfunction setupWebsocket(roomId) {\n  return window.io(\n    \"https://simple-websocket-server.herokuapp.com/?roomId=\" + roomId\n  );\n}\n\nReactDOM.render(<PlanningPoker />, document.getElementById(\"root\"));\n"],"sourceRoot":""}